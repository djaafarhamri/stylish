datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// User Model
model User {
  id        String    @id @default(uuid())
  email     String    @unique
  password  String
  firstName String
  lastName  String
  phone     String
  addresses Address[]
  role      UserRole  @default(CUSTOMER)
  orders    Order[]
  cart      Cart?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Address {
  id         String  @id @default(uuid())
  name       String
  street     String
  city       String
  state      String
  postalCode String
  country    String  @default("Algeria")
  isDefault  Boolean @default(false)
  user       User    @relation(fields: [userId], references: [id])
  userId     String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id          String           @id @default(uuid())
  name        String
  description String
  price       Decimal
  salePrice   Decimal?
  category    Category         @relation(fields: [categoryid], references: [id])
  categoryid  String
  imageUrl    String
  images      String[]
  inStock     Boolean          @default(true)
  inNew       Boolean          @default(true)
  isFeatured  Boolean          @default(false)
  rating      Float            @default(0)
  reviewCount Int              @default(0)
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  variants    ProductVariant[]
}

model ProductVariant {
  id        String  @id @default(uuid())
  product   Product @relation(fields: [productId], references: [id])
  productId String
  color     Color   @relation(fields: [colorId], references: [id])
  colorId   String
  size      Size
  quantity  Int     @default(0)

  CartItem CartItem[]

  OrderItem OrderItem[]
}

model Category {
  id      String    @id @default(uuid())
  name    String    @unique
  Product Product[]
}

model Color {
  id   String @id @default(uuid())
  name String @unique
  hex  String

  ProductVariant ProductVariant[]
}

// Order Model
model Order {
  id        String      @id @default(uuid())
  user      User        @relation(fields: [userId], references: [id])
  userId    String
  items     OrderItem[]
  total     Decimal
  status    OrderStatus @default(PENDING)
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

// OrderItem Model
model OrderItem {
  id        String         @id @default(uuid())
  order     Order          @relation(fields: [orderId], references: [id])
  orderId   String
  variant   ProductVariant @relation(fields: [variantId], references: [id])
  variantId String
  quantity  Int
}

// Cart Model
model Cart {
  id        String      @id @default(uuid())
  user      User        @relation(fields: [userId], references: [id])
  userId    String      @unique
  items     CartItem[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

// CartItem Model
model CartItem {
  id        String         @id @default(uuid())
  cart     Cart           @relation(fields: [cartId], references: [id])
  cartId    String
  variant   ProductVariant @relation(fields: [variantId], references: [id])
  variantId String
  quantity  Int
}

// Enums
enum Size {
  XS
  S
  M
  L
  XL
  XXL
}

enum UserRole {
  CUSTOMER
  ADMIN
}

enum OrderStatus {
  PENDING
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED
}
